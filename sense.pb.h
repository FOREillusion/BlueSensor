/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SENSE_PB_H_INCLUDED
#define PB_SENSE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SenseUpdate {
    int32_t field;
    pb_size_t which_data;
    union {
        int32_t data_int32;
        float data_float;
        char log[32];
    } data;
/* @@protoc_insertion_point(struct:SenseUpdate) */
} SenseUpdate;


/* Initializer values for message structs */
#define SenseUpdate_init_default                 {0, 0, {0}}
#define SenseUpdate_init_zero                    {0, 0, {0}}

/* Field tags (for use in manual encoding/decoding) */
#define SenseUpdate_data_int32_tag               2
#define SenseUpdate_data_float_tag               3
#define SenseUpdate_log_tag                      4
#define SenseUpdate_field_tag                    1

/* Struct field encoding specification for nanopb */
#define SenseUpdate_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, field, 1) \
X(a, STATIC, ONEOF, INT32, (data,data_int32,data.data_int32), 2) \
X(a, STATIC, ONEOF, FLOAT, (data,data_float,data.data_float), 3) \
X(a, STATIC, ONEOF, STRING, (data,log,data.log), 4)
#define SenseUpdate_CALLBACK NULL
#define SenseUpdate_DEFAULT NULL

extern const pb_msgdesc_t SenseUpdate_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SenseUpdate_fields &SenseUpdate_msg

/* Maximum encoded size of messages (where known) */
#define SenseUpdate_size                         44

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
