/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SENSE_PB_H_INCLUDED
#define PB_SENSE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SenseUpdate {
    int32_t field;
    float data;
/* @@protoc_insertion_point(struct:SenseUpdate) */
} SenseUpdate;


/* Initializer values for message structs */
#define SenseUpdate_init_default                 {0, 0}
#define SenseUpdate_init_zero                    {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SenseUpdate_field_tag                    1
#define SenseUpdate_data_tag                     2

/* Struct field encoding specification for nanopb */
#define SenseUpdate_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, field, 1) \
X(a, STATIC, SINGULAR, FLOAT, data, 2)
#define SenseUpdate_CALLBACK NULL
#define SenseUpdate_DEFAULT NULL

extern const pb_msgdesc_t SenseUpdate_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SenseUpdate_fields &SenseUpdate_msg

/* Maximum encoded size of messages (where known) */
#define SenseUpdate_size                         16

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
